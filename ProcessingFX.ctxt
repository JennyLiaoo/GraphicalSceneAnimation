#BlueJ class context
comment0.target=ProcessingFX
comment0.text=\r\n\ The\ root\ class\ that\ organizes\ all\ the\ relationships\ between\ JavaFX,\ the\ Keyboard,\ the\ Mouse,\ the\ Screen\ and\ the\ ability\r\n\ to\ draw\ on\ the\ window.\r\n\r\n\ @author\:\ Adam\ Drenth\r\n\ @version\:\ 12.12.2021\r\n
comment1.params=stage
comment1.target=void\ start(javafx.stage.Stage)
comment1.text=\r\n\ The\ "Main\ method"\ for\ all\ JavaFX\ programs.\ \ It\ is\ launched\ after\ the\ JavaFX\ components\ are\ initialized.\r\n\ This\ method\ is\ used\ to\ attached\ all\ the\ required\ components\ to\ the\ application\ window\ and\ it\ works\ like\ Russian\r\n\ dolls.\r\n\r\n\ Stage\ represents\ the\ application\ window.\ It\ holds\ everything\ and\ have\ the\ overall\ visual\ size\r\n\ Scene\ is\ everything\ is\ current\ present\ in\ the\ window.\ \ Everything\ MUST\ be\ attached\ to\ the\ scene\ to\ be\ visible\r\n\ Group\ root\ organzes\ everything\ to\ be\ attached\ to\ the\ Scene.\ \ Everything\ MUST\ be\ attached\ to\ the\ root\ or\ something\r\n\ \ \ \ \ else\ that\ is\ ultimately\ attached\ to\ the\ root\ to\ be\ visible\r\n\r\n\ Stage\ <-\ Scene\ <-\ root\ <-\ {Everything\ else}\ <-\ ...\r\n\ @param\ stage\r\n
comment10.params=
comment10.target=void\ mousePressed()
comment11.params=
comment11.target=void\ mouseReleased()
comment12.params=
comment12.target=void\ mouseDragged()
comment13.params=
comment13.target=void\ mouseMoved()
comment14.params=
comment14.target=void\ mouseWheel()
comment15.params=
comment15.target=void\ keyTyped()
comment15.text=\r\n\ Optional\ Methods\ to\ be\ overloaded\ for\ keyboard\ events\r\n
comment16.params=
comment16.target=void\ keyPressed()
comment17.params=
comment17.target=void\ keyReleased()
comment18.params=
comment18.target=void\ windowChanged()
comment18.text=\r\n\ Optional\ Methods\ to\ be\ overloaded\ for\ window\ events\r\n
comment2.params=
comment2.target=void\ exit()
comment2.text=\r\n\ The\ proper\ way\ to\ shut\ down\ a\ JavaFX\ application.\ It\ ensures\ all\ required\ shut\ down\ methods\ are\ called.\r\n
comment3.params=
comment3.target=void\ startProcessingProcess()
comment3.text=\r\n\ Emulates\ P5.js\ or\ Processing\ Functionality\ by\ calling\ setup()\ at\ the\ start.\ \ draw()\ is\ called\ over\ and\ over\ again\r\n
comment4.params=now
comment4.target=void\ handle(long)
comment5.params=
comment5.target=void\ drawMethodCall()
comment6.params=newRate
comment6.target=void\ setRate(double)
comment7.params=pen
comment7.target=void\ setup(javafx.scene.canvas.GraphicsContext)
comment7.text=\r\n\ The\ setup\ method\ MUST\ be\ implemented\ in\ your\ application.\ \ It\ passes\ along\ an\ object\ that\ allows\ you\ to\ draw\r\n\ directly\ on\ the\ canvas.\ It\ is\ called\ once\ and\ only\ at\ the\ beginning.\r\n\ @param\ pen\ An\ object\ used\ for\ drawing\ on\ the\ canvas\r\n
comment8.params=pen
comment8.target=void\ draw(javafx.scene.canvas.GraphicsContext)
comment8.text=\r\n\ The\ setup\ method\ MUST\ be\ implemented\ in\ your\ appplication.\ It\ passes\ along\ an\ object\ that\ allows\ you\ to\ draw\r\n\ directly\ on\ the\ canvas.\ It\ is\ called\ after\ setup()\ and\ it\ is\ called\ repeatedly\ and\ infinitely\ at\ a\r\n\ regular\ interval.\r\n\ @param\ pen\ An\ object\ used\ for\ drawing\ on\ the\ canvas\r\n
comment9.params=
comment9.target=void\ mouseClicked()
comment9.text=\r\n\ Optional\ Methods\ to\ be\ overloaded\ for\ mouse\ events\r\n
numComments=19
